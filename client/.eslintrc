{
	"env": {
		"es6": true,
		"node": true
	},
	"extends": [
    "airbnb-typescript",
    "plugin:react-hooks/recommended"
	],
	"plugins": [
		"import"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": 2020,
		"sourceType": "module",
		"ecmaFeatures": {
			"jsx": true,
			"legacyDecorators": true
    },
    "project": "./tsconfig.json"
	},
	"overrides": [
		{
			"files": [
				"./**/*.js"
			],
			"rules": {
				"no-unused-vars": [
					2,
					{
						"varsIgnorePattern": "^_",
						"argsIgnorePattern": "^_",
						"ignoreRestSiblings": true
					}
				]
			}
		},
		{
			"files": [
				"./**/*{.ts,.tsx}"
			],
			"extends": [
				"plugin:@typescript-eslint/recommended"
			],
			"plugins": [
				"@typescript-eslint"
			],
			"rules": {
        "import/prefer-default-export": "off",
				"@typescript-eslint/explicit-function-return-type": 0,
				"@typescript-eslint/no-empty-function": 0,
				"@typescript-eslint/no-explicit-any": 0,
				"@typescript-eslint/no-non-null-assertion": 0,
				"@typescript-eslint/no-unused-vars": [
					2,
					{
						"varsIgnorePattern": "^_",
						"argsIgnorePattern": "^_",
						"ignoreRestSiblings": true
					}
				]
			}
		},
		{
			"files": [
				"./**/*{.ts,.tsx}"
			],
			"env": {
				"browser": true
			},
			"extends": [
        "plugin:@typescript-eslint/recommended",
				"plugin:react/recommended"
			],
			"plugins": [
        "@typescript-eslint",
				"react",
				"react-hooks"
			],
			"parserOptions": {
				"project": "./tsconfig.json"
			},
			"globals": {
				"NODE_ENV": "readonly",
				"SERVER_HOST": "readonly",
        "STATIC_HOST": "readonly"
			},
			"settings": {
				"react": {
					"pragma": "React",
					"version": "detect"
				}
			},
			"rules": {
        "jsx-a11y/label-has-associated-control": "off",
        "@typescript-eslint/explicit-module-boundary-types": ["error"],
        "@typescript-eslint/space-before-blocks": "off",
				"react/display-name": 0,
				"react/jsx-no-target-blank": 0,
        "react/react-in-jsx-scope": 0,
        "react/prop-types": 0,
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "react/jsx-indent": [2, 2],
        "indent": [
          "error",
          2,
          {
            "SwitchCase": 1,
            "MemberExpression": 1
          }
        ],
        "spaced-comment": ["error", "always", {
          "line": {
              "markers": ["/"],
              "exceptions": ["-", "+"]
          },
          "block": {
              "markers": ["!"],
              "exceptions": ["*"],
              "balanced": true
          }
        }],
        "react/jsx-closing-bracket-location": [
          2,
          {
            "nonEmpty": "line-aligned",
            "selfClosing": "line-aligned"
          }
        ],
        "arrow-parens": [
          2,
          "always",
          {
            "requireForBlockBody": true
          }
        ],
        "padding-line-between-statements": [
          2,
          {
            "blankLine": "always",
            "prev": "*",
            "next": "return"
          },
          {
            "blankLine": "always",
            "prev": [
              "const",
              "let",
              "var"
            ],
            "next": "*"
          },
          {
            "blankLine": "any",
            "prev": [
              "const",
              "let",
              "var"
            ],
            "next": [
              "const",
              "let",
              "var"
            ]
          },
          {
            "blankLine": "always",
            "prev": "directive",
            "next": "*"
          },
          {
            "blankLine": "any",
            "prev": "directive",
            "next": "directive"
          },
          {
            "blankLine": "always",
            "prev": "block-like",
            "next": "*"
          },
          {
            "blankLine": "always",
            "prev": "multiline-const",
            "next": "*"
          },
          {
            "blankLine": "always",
            "prev": "multiline-expression",
            "next": "*"
          },
          {
            "blankLine": "always",
            "prev": "multiline-let",
            "next": "*"
          },
          {
            "blankLine": "always",
            "prev": "multiline-var",
            "next": "*"
          },
          {
            "blankLine": "always",
            "prev": "switch",
            "next": "*"
          },
          {
            "blankLine": "always",
            "prev": "import",
            "next": "*"
          },
          {
            "blankLine": "any",
            "prev": "import",
            "next": "import"
          },
          {
            "blankLine": "always",
            "prev": "*",
            "next": "case"
          },
          {
            "blankLine": "any",
            "prev": "case",
            "next": "case"
          },
          {
            "blankLine": "always",
            "prev": "*",
            "next": "default"
          },
          {
            "blankLine": "any",
            "prev": "case",
            "next": "default"
          }
        ]
			}
		}
  ]
}
